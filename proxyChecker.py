from proxy_checker import ProxyChecker
import concurrent.futures
import os

# Provide the full path to the proxy file
proxies_file = "C:/Users/aymen/Desktop/foundings/proxies/23 - https proxy - Pastehook.txt"

# Function to read proxies from file
def read_proxies(file_path):
    proxies = []
    with open(file_path, "r") as file:
        for line in file:
            proxy = line.strip()
            if proxy:  # Check if the line is not empty
                proxies.append(proxy)
    return proxies

# Function to check proxy quality and reliability
def check_proxy(proxy):
    checker = ProxyChecker()
    result = checker.check_proxy(proxy)
    
    print(f"Checking proxy: {proxy}")
    print("Full result dictionary:", result)  # Print the full result dictionary for debugging
    
    if result and result["anonymity"] == "High":
        response_time = result.get("response_time", "N/A")
        print(f"Proxy {proxy} is working. Anonymity level: {result['anonymity']}, Response time: {response_time} ms")
        if response_time != "N/A" and response_time < 1000:
            return proxy
    else:
        print(f"Proxy {proxy} does not meet quality criteria.")
        return None

# Read proxies from file
proxy_list = read_proxies(proxies_file)

# Check proxies using multiple threads for faster processing
verified_proxies = []

with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:
    for proxy in executor.map(check_proxy, proxy_list):
        if proxy:
            verified_proxies.append(proxy)

# Create the directory if it doesn't exist
output_directory = os.path.expanduser("~/Desktop/verified_proxies")
os.makedirs(output_directory, exist_ok=True)

# Write verified proxies to a new text file
output_file = os.path.join(output_directory, "verified_proxies.txt")
with open(output_file, "w") as file:
    for proxy in verified_proxies:
        file.write(proxy + "\n")

print(f"Verified proxies saved to {output_file}")

